# See config example - https://github.com/kiprotect/klaro/blob/master/dist/config.js
prototype(Tms.Consent:Klaro.Config) < prototype(Neos.Fusion:RawArray) {

    # You can customize the ID of the DIV element that Klaro will create
    # when starting up. If undefined, Klaro will use 'klaro'.
    elementID = 'klaro'

    # Setting this to true will render the descriptions of the consent
    # modal and consent notice are HTML. Use with care.
    htmlTexts = false

    # Setting 'embedded' to true will render the Klaro modal and notice without
    # the modal background, allowing you to e.g. embed them into a specific element
    # of your website, such as your privacy notice.
    embedded = false

    # You can group services by their purpose in the modal. This is advisable
    # if you have a large number of services. Users can then enable or disable
    # entire groups of services instead of having to enable or disable every service.
    groupByPurpose = true

    # How Klaro should store the user's preferences. It can be either 'cookie'
    # (the default) or 'localStorage'.
    storageMethod = 'localStorage'

    # You can customize the name of the cookie that Klaro uses for storing
    # user consent decisions. If undefined, Klaro will use 'klaro'.
    cookieName = 'klaro'

    # You can also set a custom expiration time for the Klaro cookie.
    # By default, it will expire after 120 days.
    cookieExpiresAfterDays = 365

    # Put a link to your privacy policy here (relative or absolute).
    privacyPolicy = Tms.Consent:Helper.PrivacyPolicyUri

    # Defines the default state for applications (true=enabled by default).
    default = false

    # If "mustConsent" is set to true, Klaro will directly display the consent
    # manager modal and not allow the user to close it before having actively
    # consented or declines the use of third-party services.
    mustConsent = false

    # Show "accept all" to accept all services instead of "ok" that only accepts
    # required and "default: true" services
    acceptAll = true

    # Do not show "decline" button in cookie notice
    hideDeclineAll = false

    # You can define the UI language directly here. If undefined, Klaro will
    # use the value given in the global "lang" variable. If that does
    # not exist, it will use the value given in the "lang" attribute of your
    # HTML tag. If that also doesn't exist, it will use 'en'.
    #lang = 'en'

    translations = ${Configuration.setting('Tms.Consent.config.translations')}
    services = ${Configuration.setting('Tms.Consent.config.services')}
    services.@process.build = ${Tms.Consent.Klaro.buildServicesConfig(value)}

    @process.toJson = ${Json.stringify(value, ['JSON_UNESCAPED_SLASHES'])}

    # TODO: needs better implementation / since we do the service configration via YAML, this workaround is needed to use Klaro!'s callback function feature
    @process.setCallbackFunction = ${String.replace(value, '"toggleNoConsentPlaceholders"', 'function(consent, service) { toggleNoConsentPlaceholders(consent, service); }')}

    @process.wrap = ${'<script>window.klaroConfig = ' + value +  '</script>'}
}
